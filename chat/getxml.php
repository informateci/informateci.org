<?php//**volodya***//------------------------------------------------------------------------------// function for debuging//------------------------------------------------------------------------------$dbg_time_start = null;function _getmicrotime(){list($usec, $sec) = explode(" ",microtime());return ((float)$usec + (float)$sec);}function timer_start($msg = "Timer out", $start=true){global $dbg_time_start;if( $start ){$dbg_time_start[ strtolower($msg) ] = _getmicrotime();}else{$time_end = _getmicrotime();$time = $time_end - $dbg_time_start[strtolower($msg)];if($time_end == $time)return "You NOT start timer!!!";elsereturn "[$msg]:time $time s.";}}function get_time($msg = "Timer out"){global $dbg_time_start;$time_end = _getmicrotime();$time = $time_end - $dbg_time_start[strtolower($msg)];if($time_end == $time)return "You NOT start timer!!!";elsereturn "[$msg]:time $time s.";}//**volodya***timer_start();$GLOBALS["cached_select_count"] = 0;$GLOBALS["select_count"] = 0;$GLOBALS["query_count"] = 0;	error_reporting(0);	ob_start();	$req = array_merge($_GET, $_POST);				$GLOBALS['fc_config_stop'] = true;	if($req['c'] == 'lin' || !isset($req['id']) || !$req['id'] || $req['c'] == 'tzset' || $req['c'] == 'srtbt')		$GLOBALS['fc_config_stop'] = false;	require_once('inc/common.php');	if($req['c'] == 'glan' && strlen($req['l']) == 2)	{		$in_str = 'inc/langs/' . $req['l'] . '.php';		//if(file_exists($in_str))		require_once($in_str);	}	$GLOBALS['fc_config_stop'] = false;	header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");	header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");	header("Cache-Control: no-store, no-cache, must-revalidate");	header("Cache-Control: post-check=0, pre-check=0", false);	header("Pragma: no-cache");	header("Pragma: public");	header("Expires: 0");	header("Content-type: text/xml");	//header('Content-type: text/plain');	$st = microtime();		$conn =& ChatServer::getConnection($req);	$mqi = $conn->process($req);		ChatServer::purgeExpired();?><response id="<?php echo $conn->id?>">	<?php		while($mqi->hasNext()) {			$m = $mqi->next();			echo($m->toXML($conn->tzoffset));		}		if($req['c'] == 'msg' && $GLOBALS['fc_config']['enableBots'])		{			$GLOBALS['fc_config']['bot']->processMessages();		}	?></response><?php	ob_end_flush();//toLog("select count: ".$GLOBALS["select_count"]."; query count:".$GLOBALS["query_count"]."; cached selects:".$GLOBALS["cached_select_count"]."; :  ".get_time());?>